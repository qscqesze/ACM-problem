//qscqesze
#include <cstdio>
#include <cmath>
#include <cstring>
#include <ctime>
#include <iostream>
#include <algorithm>
#include <set>
#include <vector>
#include <sstream>
#include <queue>
#include <typeinfo>
#include <fstream>
#include <map>
#include <stack>
typedef long long ll;
using namespace std;
//freopen("D.in","r",stdin);
//freopen("D.out","w",stdout);
#define sspeed ios_base::sync_with_stdio(0);cin.tie(0)
#define maxn 200001
#define mod 10007
#define eps 1e-9
int Num;
char CH[20];
//const int inf=0x7fffffff;   //нчоч╢С
const int inf=0x3f3f3f3f;
/*

inline void P(int x)
{
    Num=0;if(!x){putchar('0');puts("");return;}
    while(x>0)CH[++Num]=x%10,x/=10;
    while(Num)putchar(CH[Num--]+48);
    puts("");
}
*/
inline ll read()
{
	int x=0,f=1;char ch=getchar();
	while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}
	while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}
	return x*f;
}
inline void P(int x)
{
    Num=0;if(!x){putchar('0');puts("");return;}
    while(x>0)CH[++Num]=x%10,x/=10;
    while(Num)putchar(CH[Num--]+48);
    puts("");
}
//**************************************************************************************

int a[100000];
int main()
{
    int n,m;
    n=read(),m=read();
    for(int i=1;i<=n;i++)
        a[i]=read();
    for(int j=1;j<=m;j++)
    {
        int q;
        q=read();
        if(q==1)
        {
            int x,y;
            x=read(),y=read();
            a[x]=y;
        }
        else if(q==2)
        {
            int l,r;
            l=read(),r=read();
            int ans=a[l];
            for(int i=l;i<=r;i++)
                ans=min(ans,a[i]);
            int num=0;
            for(int i=l;i<=r;i++)
                if(a[i]==ans)
                    num++;
            printf("%d %d\n",ans,num);
        }
        else
        {
            int l,r,k;
            l=read(),r=read(),k=read();
            int num=0;
            for(int i=l;i<=r;i++)
            {
                if(a[i]<=k)
                    num++;
            }
            printf("%d\n",num);
        }
    }
}

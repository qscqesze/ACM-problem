//qscqesze
#include <cstdio>
#include <cmath>
#include <cstring>
#include <ctime>
#include <iostream>
#include <algorithm>
#include <set>
#include <vector>
#include <sstream>
#include <queue>
#include <typeinfo>
#include <fstream>
#include <map>
#include <stack>
typedef long long ll;
using namespace std;
//freopen("D.in","r",stdin);
//freopen("D.out","w",stdout);
#define sspeed ios_base::sync_with_stdio(0);cin.tie(0)
#define maxn 200001
#define mod 10007
#define eps 1e-9
int Num;
char CH[20];
//const int inf=0x7fffffff;   //нчоч╢С
const int inf=0x3f3f3f3f;
/*

inline void P(int x)
{
    Num=0;if(!x){putchar('0');puts("");return;}
    while(x>0)CH[++Num]=x%10,x/=10;
    while(Num)putchar(CH[Num--]+48);
    puts("");
}
*/
inline ll read()
{
    ll x=0,f=1;char ch=getchar();
    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}
    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}
    return x*f;
}
inline void P(int x)
{
    Num=0;if(!x){putchar('0');puts("");return;}
    while(x>0)CH[++Num]=x%10,x/=10;
    while(Num)putchar(CH[Num--]+48);
    puts("");
}
//**************************************************************************************

bool flag;
int n,m,tot,ans;
int a[100];
set<int> q;
void dfs(int x,int sum)
{
    if(sum>m)return;
    if(x==tot)
    {
		if(!flag)q.insert(sum);
		else 
		{
			set<int>::iterator t=q.lower_bound(m-sum);
			if(t!=q.end()&&*t+sum<=m)ans=max(*t+sum,ans);
			if(t!=q.begin())
			{
				--t;
				if(*t+sum<=m)ans=max(*t+sum,ans);
			}
		}
		return;
    }
    dfs(x+1,sum);
    dfs(x+1,sum+a[x]);
}
int main()
{
    n=read();m=read();
    for(int i=1;i<=n;i++)
		a[i]=read();
    flag=0;tot=n/2+1;
    dfs(1,0);
    flag=1;tot=n+1;
    dfs(n/2+1,0);
    printf("%d\n",ans);
    return 0;
}

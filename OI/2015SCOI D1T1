//qscqesze
#include <cstdio>
#include <cmath>
#include <cstring>
#include <ctime>
#include <iostream>
#include <algorithm>
#include <set>
#include <vector>
#include <sstream>
#include <queue>
#include <typeinfo>
#include <fstream>
#include <map>
#include <stack>
typedef long long ll;
using namespace std;
//freopen("D.in","r",stdin);
//freopen("D.out","w",stdout);
#define sspeed ios_base::sync_with_stdio(0);cin.tie(0)
#define maxn 1000
#define mod 10007
#define eps 1e-9
int Num;
char CH[20];
//const int inf=0x7fffffff;   //нчоч╢С
const int inf=0x3f3f3f3f;
/*

inline void P(int x)
{
    Num=0;if(!x){putchar('0');puts("");return;}
    while(x>0)CH[++Num]=x%10,x/=10;
    while(Num)putchar(CH[Num--]+48);
    puts("");
}
*/
inline ll read()
{
	ll x=0,f=1;char ch=getchar();
	while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}
	while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}
	return x*f;
}
inline void P(int x)
{
    Num=0;if(!x){putchar('0');puts("");return;}
    while(x>0)CH[++Num]=x%10,x/=10;
    while(Num)putchar(CH[Num--]+48);
    puts("");
}
//**************************************************************************************


int num[maxn][maxn];

int ma[maxn][maxn];
int vis[maxn];
int match[maxn];
int n,m,k;
vector<int> e[maxn];
int flag;

int dfs(int a)
{
    for(int i=0;i<e[a].size();i++)
    {
        if(vis[e[a][i]]==0)
        {
            vis[e[a][i]]=1;
            if(match[e[a][i]]==-1||dfs(match[e[a][i]]))
            {
                match[e[a][i]]=a;
                return 1;
            }
        }
    }
    return 0;
}

int check(int x)
{
    for(int i=0;i<maxn;i++)
        e[i].clear();
    memset(match,-1,sizeof(match));
    for(int i=1;i<=n;i++)
    {
        for(int j=1;j<=m;j++)
        {
            if(num[i][j]<=x)
            {
                e[i].push_back(j);
            }
        }
    }
    int ans=0;
    for(int i=1;i<=n;i++)
    {
        memset(vis,0,sizeof(vis));
        if(dfs(i))
            ans++;
    }
    //cout<<x<<" "<<ans<<endl;
    if(ans>(flag-k))
        return 1;
    return 0;
}
int main()
{
    n=read(),m=read(),k=read();
    int l=inf;
    int r=-inf;
    flag=min(n,m);
    for(int i=1;i<=n;i++)
        for(int j=1;j<=m;j++)
        {
            num[i][j]=read();
            l=min(l,num[i][j]);
            r=max(r,num[i][j]);
        }
    while(l<r)
    {
        int mid=(l+r)>>1;
        if(check(mid))
            r=mid;
        else
            l=mid+1;
    }
    cout<<l<<endl;
}

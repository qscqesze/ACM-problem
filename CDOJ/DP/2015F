//qscqesze
#include <cstdio>
#include <cmath>
#include <cstring>
#include <ctime>
#include <iostream>
#include <algorithm>
#include <set>
#include <vector>
#include <sstream>
#include <queue>
#include <typeinfo>
#include <fstream>
#include <map>
#include <stack>
typedef long long ll;
using namespace std;
//freopen("D.in","r",stdin);
//freopen("D.out","w",stdout);
#define sspeed ios_base::sync_with_stdio(0);cin.tie(0)
#define maxn 200001
#define mod 10007
#define eps 1e-9
int Num;
char CH[20];
//const int inf=0x7fffffff;   //нчоч╢С
const int inf=0x3f3f3f3f;
/*

inline void P(int x)
{
    Num=0;if(!x){putchar('0');puts("");return;}
    while(x>0)CH[++Num]=x%10,x/=10;
    while(Num)putchar(CH[Num--]+48);
    puts("");
}
*/
inline ll read()
{
	int x=0,f=1;char ch=getchar();
	while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}
	while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}
	return x*f;
}
inline void P(int x)
{
    Num=0;if(!x){putchar('0');puts("");return;}
    while(x>0)CH[++Num]=x%10,x/=10;
    while(Num)putchar(CH[Num--]+48);
    puts("");
}
//**************************************************************************************

double dp[2000][2000];
double dfs(int w,int b)
{
    if(w==0) return 0;
    if(b==0&&w!=0) return 1;
    if(dp[w][b]>=0) return dp[w][b];
    dp[w][b]=w*1.0/(w+b);
    if(b>=2)
    {
        double tb=b*1.0/(w+b)*(b-1)*1.0/(w+b-1);
        if(b>=3)
            dp[w][b]+=tb*dfs(w,b-3)*(b-2)*1.0/(w+b-2);
        if(w>=1)
            dp[w][b]+=tb*dfs(w-1,b-2)*(w*1.0)/(w+b-2);
    }
    return dp[w][b];
}

int w,b;

int main()
{
    memset(dp,-1,sizeof(dp));
    scanf("%d%d",&w,&b);
    printf("%.9f\n",dfs(w,b));
}

//qscqesze
#include <cstdio>
#include <cmath>
#include <cstring>
#include <ctime>
#include <iostream>
#include <algorithm>
#include <set>
#include <vector>
#include <sstream>
#include <queue>
#include <typeinfo>
#include <fstream>
#include <map>
#include <ctime>
#include <stack>
typedef long long ll;
using namespace std;
//freopen("D.in","r",stdin);
//freopen("D.out","w",stdout);
#define sspeed ios_base::sync_with_stdio(0);cin.tie(0)
#define maxn 200001
#define mod 10007
#define eps 1e-9
int Num;
char CH[20];
//const int inf=0x7fffffff;   //нчоч╢С
const int inf=0x3f3f3f3f;
/*

inline void P(int x)
{
    Num=0;if(!x){putchar('0');puts("");return;}
    while(x>0)CH[++Num]=x%10,x/=10;
    while(Num)putchar(CH[Num--]+48);
    puts("");
}
*/
inline ll read()
{
    int x=0,f=1;char ch=getchar();
    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}
    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}
    return x*f;
}
inline void P(int x)
{
    Num=0;if(!x){putchar('0');puts("");return;}
    while(x>0)CH[++Num]=x%10,x/=10;
    while(Num)putchar(CH[Num--]+48);
    puts("");
}
//**************************************************************************************
int dp[10][3];
int bit[10];
int n,m;

void init()
{
    dp[0][0]=1,dp[0][1]=0,dp[0][2]=0;
    for(int i=1;i<=9;i++)
    {
        dp[i][0]=dp[i-1][0]*9-dp[i-1][1];
        dp[i][1]=dp[i-1][0];
        dp[i][2]=dp[i-1][2]*10+dp[i-1][1]+dp[i-1][0];
    }
}

int cal(int n)
{
    int temp=n;
    memset(bit,0,sizeof(bit));
    int len=0;
    while(n)
    {
        bit[++len]=n%10;
        n/=10;
    }
    bit[len+1]=0;
    int ans=0;
    bool flag=0;
    for(int i=len;i>=1;i--)
    {
        ans+=bit[i]*dp[i-1][2];
        if(flag)
            ans+=bit[i]*dp[i-1][0];
        else
        {
            if(bit[i]>6)
                ans+=dp[i-1][1];
            if(bit[i]>4)
                ans+=dp[i-1][0];
            if(bit[i+1]==6&&bit[i]>2)
                ans+=dp[i][1];
        }
        if(bit[i]==4||(bit[i+1]==6&&bit[i]==2))
            flag=1;
    }
    if(flag)
        ans++;
    return temp-ans;
}

int main()
{
    init();
    while(cin>>n>>m&&(n||m))
    {
        cout<<(cal(m)-cal(n-1))<<endl;
    }
    return 0;
}

//qscqesze
#include <cstdio>
#include <cmath>
#include <cstring>
#include <ctime>
#include <iostream>
#include <algorithm>
#include <set>
#include <vector>
#include <sstream>
#include <queue>
#include <typeinfo>
#include <fstream>
#include <map>
#include <ctime>
#include <stack>
typedef long long ll;
using namespace std;
//freopen("D.in","r",stdin);
//freopen("D.out","w",stdout);
#define sspeed ios_base::sync_with_stdio(0);cin.tie(0)
#define maxn 200001
#define mod 10007
#define eps 1e-9
int Num;
char CH[20];
//const int inf=0x7fffffff;   //нчоч╢С
const int inf=0x3f3f3f3f;
/*

inline void P(int x)
{
    Num=0;if(!x){putchar('0');puts("");return;}
    while(x>0)CH[++Num]=x%10,x/=10;
    while(Num)putchar(CH[Num--]+48);
    puts("");
}
*/
inline ll read()
{
    int x=0,f=1;char ch=getchar();
    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}
    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}
    return x*f;
}
inline void P(int x)
{
    Num=0;if(!x){putchar('0');puts("");return;}
    while(x>0)CH[++Num]=x%10,x/=10;
    while(Num)putchar(CH[Num--]+48);
    puts("");
}
//**************************************************************************************

struct node
{
	int x,y;
	int v[11];
	int step;
	int ans;
};
int g[100][100];
queue<node>q;
int dx[4]={1,0};
int dy[4]={0,1};
int main()
{
	int n=10,m=10;
	for(int i=1;i<=n;i++)
		for(int j=1;j<=m;j++)
			g[i][j]=read();
	node now;
	memset(now.v,0,sizeof(now.v));
	now.x=1,now.y=1;
	now.step=g[1][1];
	now.v[g[1][1]]=1;
	now.ans=1;
	q.push(now);
	int ans=inf;
	while(!q.empty())
	{
		now=q.front();

		
		q.pop();
		if(now.x==10&&now.y==10&&now.ans==10)
		{

			int flag=0;
			ans=min(ans,now.step);
			continue;
		}
		for(int i=0;i<2;i++)
		{
			node next=now;
			next.x+=dx[i];
			next.y+=dy[i];
			if(next.x<1||next.y<1||next.y>10||next.x>10)
				continue;
			int p=g[next.x][next.y];
			next.step+=p;
			if(!next.v[p])
			{
				next.v[p]=1;
				next.ans++;
			}
			q.push(next);
		}
	}
	cout<<ans<<endl;
}

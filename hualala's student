//qscqesze
#include <cstdio>
#include <cmath>
#include <cstring>
#include <ctime>
#include <iostream>
#include <algorithm>
#include <set>
#include <vector>
#include <sstream>
#include <queue>
#include <typeinfo>
#include <fstream>
#include <map>
#include <stack>
typedef long long ll;
using namespace std;
//freopen("D.in","r",stdin);
//freopen("D.out","w",stdout);
#define sspeed ios_base::sync_with_stdio(0);cin.tie(0)
#define maxn 200001
#define mod 10007
#define eps 1e-9
int Num;
char CH[20];
//const int inf=0x7fffffff;   //нчоч╢С
const int inf=0x3f3f3f3f;
/*

inline void P(int x)
{
    Num=0;if(!x){putchar('0');puts("");return;}
    while(x>0)CH[++Num]=x%10,x/=10;
    while(Num)putchar(CH[Num--]+48);
    puts("");
}
*/
inline ll read()
{
	int x=0,f=1;char ch=getchar();
	while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}
	while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}
	return x*f;
}
inline void P(int x)
{
    Num=0;if(!x){putchar('0');puts("");return;}
    while(x>0)CH[++Num]=x%10,x/=10;
    while(Num)putchar(CH[Num--]+48);
    puts("");
}
//**************************************************************************************

struct node
{
    int x1,y1,x2,y2,t,c;
};
int n,m,c;
int k;
node a[maxn];
vector<int> q1;
vector<int> q2;
map<int,int> H1;
map<int,int> H2;
int fa[10010][10010];
int mp[10010][10010];
int flag[10010];
int ans;

bool cmp(node b,node c)
{
    return b.t>c.t;
}

int fi(int x,int y)
{
    if(x!=fa[x][y])
        fa[x][y]=fi(fa[x][y],y);
    return fa[x][y];
}

int main()
{
    scanf("%d%d%d",&n,&m,&c);
    q1.push_back(n),q2.push_back(m);
    q1.push_back(1),q2.push_back(1);
    scanf("%d",&k);
    for(int i=0;i<k;i++)
    {
        scanf("%d%d%d%d%d%d",&a[i].x1,&a[i].y1,&a[i].x2,&a[i].y2,&a[i].c,&a[i].t);
        q1.push_back(a[i].x1);
        q1.push_back(a[i].x2);
        q2.push_back(a[i].y1);
        q2.push_back(a[i].y2);
    }
    a[k].x1=1,a[k].y1=n,a[k].x2=m,a[k].y2=1,a[k].c=c,a[k].t=0;

    sort(a,a+k+1,cmp);

    sort(q1.begin(),q1.end());
    q1.erase(unique(q1.begin(),q1.end()),q1.end());
    q2.erase(unique(q2.begin(),q2.end()),q2.end());

    for(int i=0;i<q1.size();i++)
        H1[q1[i]]=i+1;
    for(int i=0;i<q2.size();i++)
        H2[q1[i]]=i+1;

    for(int i=1;i<=q1.size();i++)
        for(int j=1;j<=q2.size();j++)
            fa[i][j]=i;

    for(int p=0;p<=k;p++)
    {
        for(int i=H1[a[p].x1];i<=H1[a[p].x2];i++)
        {
            for(int j=H2[a[p].y1];j<=H2[a[p].y2];j++)
            {
                i=fi(i,j);
                mp[i][j]=a[p].c;
                if(!flag[a[p].c])
                    ans++;
                flag[a[p].c]=1;
                fa[i][j]=i+1;
            }
        }
    }

    printf("%d\n",ans);
}

//qscqesze
#include <cstdio>
#include <cmath>
#include <cstring>
#include <ctime>
#include <iostream>
#include <algorithm>
#include <set>
#include <vector>
#include <sstream>
#include <queue>
#include <typeinfo>
#include <fstream>
#include <map>
#include <stack>
typedef long long ll;
using namespace std;
//freopen("D.in","r",stdin);
//freopen("D.out","w",stdout);
#define sspeed ios_base::sync_with_stdio(0);cin.tie(0)
#define maxn 50051
#define mod 10007
#define eps 1e-9
int Num;
char CH[20];
//const int inf=0x7fffffff;   //нчоч╢С
const int inf=0x3f3f3f3f;
/*

inline void P(int x)
{
    Num=0;if(!x){putchar('0');puts("");return;}
    while(x>0)CH[++Num]=x%10,x/=10;
    while(Num)putchar(CH[Num--]+48);
    puts("");
}
*/
inline ll read()
{
    ll x=0,f=1;char ch=getchar();
    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}
    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}
    return x*f;
}
inline void P(int x)
{
    Num=0;if(!x){putchar('0');puts("");return;}
    while(x>0)CH[++Num]=x%10,x/=10;
    while(Num)putchar(CH[Num--]+48);
    puts("");
}
//**************************************************************************************

int dp[100][maxn];
int a[maxn];

int dfs(int a,int b)//a 表示还有多少组为1  b表示还剩下多少次操作次数  
{  
    if(dp[a][b]!=-1) 
        return dp[a][b];  
    dp[a][b]=0;//其他情况都是不可操作的  
    if(b==1) 
        return dp[a][b]=dfs(a+1,0);//只剩一个单独的一，加入其它1中  
    if(a>=1&&!dfs(a-1,b))//直接去掉一个1  
        dp[a][b]=1;  
    if(a>=1&&b&&!dfs(a-1,b+1))//将一个1合到其它数中  
        dp[a][b]=1;  
    if(a>=2&&((b&&!dfs(a-2,b+3))||(b==0&&!dfs(a-2,2))))//将2个1并起来  
        dp[a][b]=1;  
    if(b>=2&&!dfs(a,b-1))//减小一  
        dp[a][b]=1;  
   
    return dp[a][b];  
}  

int main()
{
	//freopen("test.txt","r",stdin);
	memset(dp,-1,sizeof(dp));
	int t=read();
	for(int cas=1;cas<=t;cas++)
	{
        int flag=0;
        int sum=0;
        int n=read();
        for(int i=0;i<n;i++)
        {
            a[i]=read();
            if(a[i]==1)
                flag++;
            else
                sum+=a[i]+1;
        }
        sum--;
        dfs(flag,sum);
        if(dp[flag][sum])  
            printf("Case #%d: Alice\n",cas);
        else
            printf("Case #%d: Bob\n",cas);
	}
}

//qscqesze
#include <cstdio>
#include <cmath>
#include <cstring>
#include <ctime>
#include <iostream>
#include <algorithm>
#include <set>
#include <vector>
#include <sstream>
#include <queue>
#include <typeinfo>
#include <fstream>
#include <map>
#include <stack>
typedef long long ll;
using namespace std;
//freopen("D.in","r",stdin);
//freopen("D.out","w",stdout);
#define sspeed ios_base::sync_with_stdio(0);cin.tie(0)
#define maxn 200001
#define mod 10007
#define eps 1e-9
int Num;
char CH[20];
//const int inf=0x7fffffff;   //无限大
const int inf=0x3f3f3f3f;
/*

inline void P(int x)
{
    Num=0;if(!x){putchar('0');puts("");return;}
    while(x>0)CH[++Num]=x%10,x/=10;
    while(Num)putchar(CH[Num--]+48);
    puts("");
}
*/
//**************************************************************************************
inline ll read()
{
	int x=0,f=1;char ch=getchar();
	while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}
	while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}
	return x*f;
}
inline void P(int x)
{
    Num=0;if(!x){putchar('0');puts("");return;}
    while(x>0)CH[++Num]=x%10,x/=10;
    while(Num)putchar(CH[Num--]+48);
    puts("");
}

vector<int> q;
int main()
{
    int t=read();
    while(t--)
    {
        int n=read(),m=read();
        if(n==1)
            q.insert(upper_bound(q.begin(),q.end(),m),m);
        if(n==2)
            q.erase(lower_bound(q.begin(),q.end(),m));
        if(n==3)
            printf("%d\n",lower_bound(q.begin(),q.end(),m)-q.begin()+1);
        if(n==4)
            printf("%d\n",q[m-1]);
        if(n==5)
            printf("%d\n",*--lower_bound(q.begin(),q.end(),m));
        if(n==6)
            printf("%d\n",*upper_bound(q.begin(),q.end(),m));
    }
}
